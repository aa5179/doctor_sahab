# OCRWeaviate Backend Configuration Example
# Copy this to application.properties and update with your values

# Server Configuration
server.port=8000
spring.application.name=OCRWeaviate Backend

# CORS Configuration (Frontend URLs)
cors.allowed-origins=http://localhost:3000,http://localhost:3001
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# File Upload Limits
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Logging
logging.level.com.emulsify.ocrweaviate=DEBUG
logging.level.org.springframework.web=INFO

# Weaviate Configuration
# For local Weaviate instance:
weaviate.api.url=http://localhost:8080
weaviate.api.key=
# For Weaviate Cloud:
# weaviate.api.url=https://your-cluster.weaviate.network
# weaviate.api.key=your-weaviate-api-key

weaviate.collection.name=PolicyDocument
weaviate.timeout.seconds=30

# Gemini AI Configuration
# Get your API key from: https://console.cloud.google.com/
gemini.api.key=YOUR_GOOGLE_API_KEY_HERE
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent
gemini.model.name=gemini-2.0-flash
gemini.timeout.seconds=60

# OCR Configuration
# Tesseract data path (leave empty for default)
ocr.tesseract.datapath=
# Language for OCR (eng for English)
ocr.tesseract.language=eng
# Temporary directory for file processing
ocr.temp.directory=${java.io.tmpdir}/ocrweaviate

# Text Processing Configuration
text.chunk.size=500
text.chunk.overlap=50
text.min.chunk.length=30

# ===============================================
# SETUP INSTRUCTIONS:
# ===============================================
# 
# 1. Install Prerequisites:
#    - Java 17 or higher
#    - Tesseract OCR
#    - Weaviate (Docker recommended)
# 
# 2. Start Weaviate:
#    docker run -d --name weaviate -p 8080:8080 \
#      -e AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true \
#      -e PERSISTENCE_DATA_PATH='/var/lib/weaviate' \
#      -e DEFAULT_VECTORIZER_MODULE='text2vec-transformers' \
#      -e ENABLE_MODULES='text2vec-transformers' \
#      cr.weaviate.io/semitechnologies/weaviate:1.22.4
# 
# 3. Get Google API Key:
#    - Go to https://console.cloud.google.com/
#    - Enable Generative AI API
#    - Create API key and replace YOUR_GOOGLE_API_KEY_HERE
# 
# 4. Start the application:
#    mvn spring-boot:run
#    or
#    start.cmd (Windows)
# 
# 5. Test the backend:
#    curl http://localhost:8000/health